/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../../../common";
import type {
  MockCCIPRouter,
  MockCCIPRouterInterface,
} from "../../../../../../../@chainlink/contracts-ccip/contracts/test/mocks/MockRouter.sol/MockCCIPRouter";

const _abi = [
  {
    inputs: [],
    name: "InsufficientFeeTokenAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "encodedAddress",
        type: "bytes",
      },
    ],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidExtraArgsTag",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidMsgValue",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOffRamp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "err",
        type: "bytes",
      },
    ],
    name: "ReceiverError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destChainSelector",
        type: "uint64",
      },
    ],
    name: "UnsupportedDestinationChain",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sourceChainSelector",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "offRamp",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "calldataHash",
        type: "bytes32",
      },
    ],
    name: "MessageExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "retData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    name: "MsgExecuted",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GAS_FOR_CALL_EXACT_CHECK",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "message",
        type: "tuple",
      },
    ],
    name: "ccipSend",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "receiver",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "tokenAmounts",
            type: "tuple[]",
          },
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "extraArgs",
            type: "bytes",
          },
        ],
        internalType: "struct Client.EVM2AnyMessage",
        name: "",
        type: "tuple",
      },
    ],
    name: "getFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "getOnRamp",
    outputs: [
      {
        internalType: "address",
        name: "onRampAddress",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "getSupportedTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "isChainSupported",
    outputs: [
      {
        internalType: "bool",
        name: "supported",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isOffRamp",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "messageId",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "sourceChainSelector",
            type: "uint64",
          },
          {
            internalType: "bytes",
            name: "sender",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct Client.EVMTokenAmount[]",
            name: "destTokenAmounts",
            type: "tuple[]",
          },
        ],
        internalType: "struct Client.Any2EVMMessage",
        name: "message",
        type: "tuple",
      },
      {
        internalType: "uint16",
        name: "gasForCallExactCheck",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "routeMessage",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "retData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506116b4806100206000396000f3fe6080604052600436106100915760003560e01c8063a48a905811610059578063a48a905814610160578063a8d87a3b14610181578063d6be695a146101bd578063ee18e0d3146101e9578063fbca3b741461021257600080fd5b806320487ded146100965780633cf97983146100c957806369fe0e2d146100f857806383826b2b1461011a57806396f4e9f91461014d575b600080fd5b3480156100a257600080fd5b506100b66100b1366004610f2c565b61024d565b6040519081526020015b60405180910390f35b3480156100d557600080fd5b506100e96100e4366004610f91565b610257565b6040516100c093929190611051565b34801561010457600080fd5b5061011861011336600461107c565b600055565b005b34801561012657600080fd5b5061013d610135366004611095565b600192915050565b60405190151581526020016100c0565b6100b661015b3660046110c8565b610281565b34801561016c57600080fd5b5061013d61017b36600461110b565b50600190565b34801561018d57600080fd5b506101a561019c36600461110b565b5063499602d290565b6040516001600160a01b0390911681526020016100c0565b3480156101c957600080fd5b506101d462030d4081565b60405163ffffffff90911681526020016100c0565b3480156101f557600080fd5b506101ff61138881565b60405161ffff90911681526020016100c0565b34801561021e57600080fd5b5061024061022d36600461110b565b5060408051600081526020810190915290565b6040516100c09190611126565b6000545b92915050565b600060608161027061026888611173565b878787610599565b9250925092505b9450945094915050565b600061028d8280611213565b90506020146102c4576102a08280611213565b60405163370d875f60e01b81526004016102bb929190611289565b60405180910390fd5b60006102d08380611213565b8101906102dd919061107c565b90506001600160a01b038111806102f45750600a81105b15610303576102a08380611213565b6000610312856100b18661129d565b9050600061032660808601606087016112a9565b6001600160a01b03160361035a5780341015610355576040516303ed377360e11b815260040160405180910390fd5b6103a0565b341561037957604051631841b4e160e01b815260040160405180910390fd5b6103a033308361038f6080890160608a016112a9565b6001600160a01b0316929190610711565b8160006103b86103b36080880188611213565b610771565b6000015190506000866040516020016103d1919061135a565b60408051808303601f19018152828252805160209182012060a08401835280845267de41ba4fc9d91ad98285015282513381840152835180820384018152908401845292840192909252909250600091906060820190610433908b018b611213565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050509082525060200161047a60408b018b611459565b808060200260200160405190810160405280939291908181526020016000905b828210156104c6576104b7604083028601368190038101906114a2565b8152602001906001019061049a565b5050505050815250905060005b6104e060408a018a611459565b90508110156105535761054b33866104fb60408d018d611459565b8581811061050b5761050b6114be565b905060400201602001358c80604001906105259190611459565b86818110610535576105356114be565b61038f92602060409092020190810191506112a9565b6001016104d3565b50600080610565836113888789610599565b50915091508161058a57806040516302a35ba360e21b81526004016102bb91906114d4565b50919998505050505050505050565b60006060600086606001515160001480156105b2575084155b806105c557506001600160a01b0384163b155b806105e757506105e56001600160a01b0385166385572ffb60e01b61085c565b155b156106075750506040805160208101909152600080825260019250610277565b60006385572ffb60e01b8860405160240161062291906114e7565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290506106648186888a608461087f565b60405192965090945092507fa8b0355886b5b7a28bb97e4f0a24feb172618407402721c4012d8b7c6433102f906106a090869086908690611051565b60405180910390a187516020808a0151835184830120604080519485526001600160401b0390921692840192909252339083015260608201527f9b877de93ea9895756e337442c657f95a34fc68e7eb988bdfa693d5be83016b69060800160405180910390a1509450945094915050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261076b908590610959565b50505050565b604080518082019091526000808252602082015260008290036107ab57506040805180820190915262030d40815260006020820152610251565b60006107b783856115a2565b9050630e7e230f60e41b6001600160e01b03198216016107f3576107de83600481876115d2565b8101906107eb919061160d565b915050610251565b636859a83760e01b6001600160e01b031982160161084357604080518082019091528061082385600481896115d2565b810190610830919061107c565b8152600060209091015291506102519050565b604051632923fee760e11b815260040160405180910390fd5b600061086783610a30565b801561087857506108788383610a63565b9392505050565b6000606060008361ffff166001600160401b038111156108a1576108a1610c89565b6040519080825280601f01601f1916602001820160405280156108cb576020820181803683370190505b509150863b6108e55763030ed58f60e21b60005260046000fd5b5a858110156108ff57632be8ca8b60e21b60005260046000fd5b859003604081048103871061091f576337c3be2960e01b60005260046000fd5b505a6000808a5160208c0160008c8cf193505a900390503d848111156109425750835b808352806000602085013e50955095509592505050565b60006109ae826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610aed9092919063ffffffff16565b805190915015610a2b57808060200190518101906109cc9190611645565b610a2b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102bb565b505050565b6000610a43826301ffc9a760e01b610a63565b80156102515750610a5c826001600160e01b0319610a63565b1592915050565b6040516001600160e01b031982166024820152600090819060440160408051601f19818403018152919052602080820180516001600160e01b03166301ffc9a760e01b178152825192935060009283928392909183918a617530fa92503d91506000519050828015610ad6575060208210155b8015610ae25750600081115b979650505050505050565b6060610afc8484600085610b04565b949350505050565b606082471015610b655760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102bb565b600080866001600160a01b03168587604051610b819190611662565b60006040518083038185875af1925050503d8060008114610bbe576040519150601f19603f3d011682016040523d82523d6000602084013e610bc3565b606091505b5091509150610ae28783838760608315610c3e578251600003610c37576001600160a01b0385163b610c375760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102bb565b5081610afc565b610afc8383815115610c535781518083602001fd5b8060405162461bcd60e51b81526004016102bb91906114d4565b80356001600160401b0381168114610c8457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715610cc157610cc1610c89565b60405290565b60405160a081016001600160401b0381118282101715610cc157610cc1610c89565b604051601f8201601f191681016001600160401b0381118282101715610d1157610d11610c89565b604052919050565b600082601f830112610d2a57600080fd5b81356001600160401b03811115610d4357610d43610c89565b610d56601f8201601f1916602001610ce9565b818152846020838601011115610d6b57600080fd5b816020850160208301376000918101602001919091529392505050565b80356001600160a01b0381168114610c8457600080fd5b600060408284031215610db157600080fd5b610db9610c9f565b9050610dc482610d88565b81526020820135602082015292915050565b600082601f830112610de757600080fd5b813560206001600160401b03821115610e0257610e02610c89565b610e1160208360051b01610ce9565b8083825260208201915060208460061b870101935086841115610e3357600080fd5b602086015b84811015610e5857610e4a8882610d9f565b835291830191604001610e38565b509695505050505050565b600060a08284031215610e7557600080fd5b610e7d610cc7565b905081356001600160401b0380821115610e9657600080fd5b610ea285838601610d19565b83526020840135915080821115610eb857600080fd5b610ec485838601610d19565b60208401526040840135915080821115610edd57600080fd5b610ee985838601610dd6565b6040840152610efa60608501610d88565b60608401526080840135915080821115610f1357600080fd5b50610f2084828501610d19565b60808301525092915050565b60008060408385031215610f3f57600080fd5b610f4883610c6d565b915060208301356001600160401b03811115610f6357600080fd5b610f6f85828601610e63565b9150509250929050565b600060a08284031215610f8b57600080fd5b50919050565b60008060008060808587031215610fa757600080fd5b84356001600160401b03811115610fbd57600080fd5b610fc987828801610f79565b945050602085013561ffff81168114610fe157600080fd5b925060408501359150610ff660608601610d88565b905092959194509250565b60005b8381101561101c578181015183820152602001611004565b50506000910152565b6000815180845261103d816020860160208601611001565b601f01601f19169290920160200192915050565b831515815260606020820152600061106c6060830185611025565b9050826040830152949350505050565b60006020828403121561108e57600080fd5b5035919050565b600080604083850312156110a857600080fd5b6110b183610c6d565b91506110bf60208401610d88565b90509250929050565b600080604083850312156110db57600080fd5b6110e483610c6d565b915060208301356001600160401b038111156110ff57600080fd5b610f6f85828601610f79565b60006020828403121561111d57600080fd5b61087882610c6d565b6020808252825182820181905260009190848201906040850190845b818110156111675783516001600160a01b031683529284019291840191600101611142565b50909695505050505050565b600060a0823603121561118557600080fd5b61118d610cc7565b8235815261119d60208401610c6d565b602082015260408301356001600160401b03808211156111bc57600080fd5b6111c836838701610d19565b604084015260608501359150808211156111e157600080fd5b6111ed36838701610d19565b6060840152608085013591508082111561120657600080fd5b50610f2036828601610dd6565b6000808335601e1984360301811261122a57600080fd5b8301803591506001600160401b0382111561124457600080fd5b60200191503681900382131561125957600080fd5b9250929050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610afc602083018486611260565b60006102513683610e63565b6000602082840312156112bb57600080fd5b61087882610d88565b6000808335601e198436030181126112db57600080fd5b83016020810192503590506001600160401b038111156112fa57600080fd5b80360382131561125957600080fd5b8183526000602080850194508260005b8581101561134f576001600160a01b0361133283610d88565b168752818301358388015260409687019690910190600101611319565b509495945050505050565b60208152600061136a83846112c4565b60a0602085015261137f60c085018284611260565b91505061138f60208501856112c4565b601f19808685030160408701526113a7848385611260565b935060408701359250601e198736030183126113c257600080fd5b6020928701928301923591506001600160401b038211156113e257600080fd5b8160061b36038313156113f457600080fd5b80868503016060870152611409848385611309565b935061141760608801610d88565b6001600160a01b0381166080880152925061143560808801886112c4565b93509150808685030160a08701525061144f838383611260565b9695505050505050565b6000808335601e1984360301811261147057600080fd5b8301803591506001600160401b0382111561148a57600080fd5b6020019150600681901b360382131561125957600080fd5b6000604082840312156114b457600080fd5b6108788383610d9f565b634e487b7160e01b600052603260045260246000fd5b6020815260006108786020830184611025565b600060208083528351818401528084015160406001600160401b03821660408601526040860151915060a0606086015261152460c0860183611025565b91506060860151601f19808785030160808801526115428483611025565b608089015188820390920160a089015281518082529186019450600092508501905b8083101561159657845180516001600160a01b0316835286015186830152938501936001929092019190830190611564565b50979650505050505050565b6001600160e01b031981358181169160048510156115ca5780818660040360031b1b83161692505b505092915050565b600080858511156115e257600080fd5b838611156115ef57600080fd5b5050820193919092039150565b801515811461160a57600080fd5b50565b60006040828403121561161f57600080fd5b611627610c9f565b823581526020830135611639816115fc565b60208201529392505050565b60006020828403121561165757600080fd5b8151610878816115fc565b60008251611674818460208701611001565b919091019291505056fea2646970667358221220d5d684b55620a1c69b129cb54399d0ef0aefa2a693ce8163547e98886fce87b164736f6c63430008180033";

type MockCCIPRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockCCIPRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockCCIPRouter__factory extends ContractFactory {
  constructor(...args: MockCCIPRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockCCIPRouter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockCCIPRouter__factory {
    return super.connect(runner) as MockCCIPRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockCCIPRouterInterface {
    return new Interface(_abi) as MockCCIPRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockCCIPRouter {
    return new Contract(address, _abi, runner) as unknown as MockCCIPRouter;
  }
}
